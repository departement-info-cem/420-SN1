"use strict";(self.webpackChunk_420_SN1=self.webpackChunk_420_SN1||[]).push([[156],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=o(n),s=r,k=m["".concat(p,".").concat(s)]||m[s]||d[s]||l;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=s;var u={};for(var p in t)hasOwnProperty.call(t,p)&&(u[p]=t[p]);u.originalType=e,u[m]="string"==typeof e?e:r,i[1]=u;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9701:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={},i="Comment produire une trace d'ex\xe9cution, format\xe9e en markdown",u={unversionedId:"recettes/produire-une-trace",id:"recettes/produire-une-trace",title:"Comment produire une trace d'ex\xe9cution, format\xe9e en markdown",description:"Si un as un morceau de code, on peut souhaiter savoir dans quel ordre les instructions sont ex\xe9cut\xe9es.",source:"@site/docs/03-recettes/produire-une-trace.md",sourceDirName:"03-recettes",slug:"/recettes/produire-une-trace",permalink:"/420-SN1/recettes/produire-une-trace",draft:!1,editUrl:"https://github.com/departement-info-cem/420-SN1/tree/main/docs/03-recettes/produire-une-trace.md",tags:[],version:"current",frontMatter:{}},p={},o=[{value:"Principe",id:"principe",level:2},{value:"Exemple simple",id:"exemple-simple",level:2},{value:"Trace",id:"trace",level:3},{value:"Exemple avec boucle",id:"exemple-avec-boucle",level:2},{value:"Trace",id:"trace-1",level:3},{value:"Exemple avec une fonction",id:"exemple-avec-une-fonction",level:2},{value:"Trace",id:"trace-2",level:3}],c={toc:o},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"comment-produire-une-trace-dex\xe9cution-format\xe9e-en-markdown"},"Comment produire une trace d'ex\xe9cution, format\xe9e en markdown"),(0,r.kt)("p",null,"Si un as un morceau de code, on peut souhaiter savoir dans quel ordre les instructions sont ex\xe9cut\xe9es. "),(0,r.kt)("p",null,"Pour cela, on peut utiliser un outil de tra\xe7age."),(0,r.kt)("h2",{id:"principe"},"Principe"),(0,r.kt)("p",null,"On veut accomplir 2 \xe9l\xe9ments principaux:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"indiquer quelles lignes de code s'ex\xe9cutent dans quel ordre"),(0,r.kt)("li",{parentName:"ol"},"indiquer les effets de chaque ligne de code")),(0,r.kt)("h2",{id:"exemple-simple"},"Exemple simple"),(0,r.kt)("p",null,"Si on a le code suivant:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"line_numbers",line_numbers:!0},'a = 3 + 4\nb = a * 2\nprint("salut " + str(b))\n')),(0,r.kt)("h3",{id:"trace"},"Trace"),(0,r.kt)("p",null,"On aura la trace suivante:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ligne ex\xe9cut\xe9e"),(0,r.kt)("th",{parentName:"tr",align:null},"effet"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"a = 3 + 4"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"b = a * 2"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 7, b = 14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'print("salut " + str(b))'),(0,r.kt)("td",{parentName:"tr",align:null},'a = 7, b = 14, affiche "salut 14"')))),(0,r.kt)("p",null,"Dans le cas d'une s\xe9quence d'instructions, on peut voir que les instructions sont ex\xe9cut\xe9es dans\nl'ordre de lecture du code. Simple!"),(0,r.kt)("h2",{id:"exemple-avec-boucle"},"Exemple avec boucle"),(0,r.kt)("p",null,"Si on a le code suivant:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python="},'for i in range(3):\n    if (i % 2 == 0):\n        print("c\'est pair " + str(i))\n    else:\n        print("ah ben ah ben, c\'est impair " + str(i))\n')),(0,r.kt)("h3",{id:"trace-1"},"Trace"),(0,r.kt)("p",null,"On aura la trace suivante:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ligne ex\xe9cut\xe9e"),(0,r.kt)("th",{parentName:"tr",align:null},"effet"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"for i in range(3):"),(0,r.kt)("td",{parentName:"tr",align:null},"i parcourt l'interval 0, 1, 2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"if (i % 2 == 0):"),(0,r.kt)("td",{parentName:"tr",align:null},"i = 0, donc i%2 vaut 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'print("c\'est pair " + str(i))'),(0,r.kt)("td",{parentName:"tr",align:null},'i = 0, affiche "c\'est pair 0"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"if (i % 2 == 0):"),(0,r.kt)("td",{parentName:"tr",align:null},"i = 1, donc i%2 vaut 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'print("ah ben ah ben, c\'est impair " + str(i))'),(0,r.kt)("td",{parentName:"tr",align:null},'i = 1, affiche "ah ben ah ben, c\'est impair 1"')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"if (i % 2 == 0):"),(0,r.kt)("td",{parentName:"tr",align:null},"i = 2, donc i%2 vaut 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'print("c\'est pair " + str(i))'),(0,r.kt)("td",{parentName:"tr",align:null},'i = 2, affiche "c\'est pair 2"')))),(0,r.kt)("p",null,"On voit que:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on n'indique que les lignes qui s'ex\xe9cutent en vrai"),(0,r.kt)("li",{parentName:"ul"},"certaines lignes s'ex\xe9cutent plusieurs fois, c'est le principe de la boucle")),(0,r.kt)("h2",{id:"exemple-avec-une-fonction"},"Exemple avec une fonction"),(0,r.kt)("p",null,"Si on a le code suivant:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python",metastring:"line_numbers",line_numbers:!0},'def ma_fonction(a, b):\n    c = a + b\n    return c\na = 3\nb = 5\nz = ma_fonction(a, b)\ny = ma_fonction(4, 9)\nprint("z vaut " + str(z) + " et y vaut " + str(y))\n')),(0,r.kt)("h3",{id:"trace-2"},"Trace"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ligne ex\xe9cut\xe9e"),(0,r.kt)("th",{parentName:"tr",align:null},"effet"),(0,r.kt)("th",{parentName:"tr",align:null},"pile d'appels"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"a = 3"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 3,"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"b = 5"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 3, b = 5"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"z = ma_fonction(a, b)"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 7, b = 14, appelle ma_fonction avec a->3 et b->5"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"c = a + b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 3, b = 5, c = 8"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main")," > ma_fonction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"return c"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 3, b = 5, c = 8, retourne 8, z = 8"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main")," > ma_fonction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"y = ma_fonction(4, 9)"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 3, b = 5, z = 8, appelle ma_fonction avec a->4 et b->9"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"c = a + b"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 4, b = 9, c = 13"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main")," > ma_fonction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"return c"),(0,r.kt)("td",{parentName:"tr",align:null},"a = 4, b = 9, c = 13, retourne 13, y = 13"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main")," > ma_fonction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},'print("z vaut " + str(z) + " et y vaut " + str(y))'),(0,r.kt)("td",{parentName:"tr",align:null},'a = 4, b = 9, z = 8, y = 13, affiche "z vaut 8 et y vaut 13"'),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"main"))))),(0,r.kt)("p",null,"Dans ce cas, on doit ajouter la pile d'appels pour indiquer quelles fonctions ont \xe9t\xe9 commenc\xe9es mais pas finies."))}d.isMDXComponent=!0}}]);