"use strict";(self.webpackChunksn1=self.webpackChunksn1||[]).push([[3053],{7057:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"cours/rencontre9","title":"\ud83d\udd21 String, List et Dict","description":"listes","source":"@site/docs/01-cours/09-rencontre9.mdx","sourceDirName":"01-cours","slug":"/cours/rencontre9","permalink":"/420-SN1/cours/rencontre9","draft":false,"unlisted":false,"editUrl":"https://github.com/departement-info-cem/420-SN1/tree/main/docs/01-cours/09-rencontre9.mdx","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{},"sidebar":"docs","previous":{"title":"8 - \ud83d\udcdd Examen intra (20%)","permalink":"/420-SN1/cours/rencontre8"},"next":{"title":"10 - \ud83d\uddc2 Fichiers","permalink":"/420-SN1/cours/rencontre10"}}');var t=s(4848),i=s(8453);const c={},l="\ud83d\udd21 String, List et Dict",o={},d=[{value:"listes",id:"listes",level:3},{value:"tuples",id:"tuples",level:3},{value:"dictionnaires",id:"dictionnaires",level:3},{value:"ensembles",id:"ensembles",level:3}];function a(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-string-list-et-dict",children:"\ud83d\udd21 String, List et Dict"})}),"\n",(0,t.jsx)(n.h1,{id:"\ufe0f-en-construction-",children:"\ud83c\udfd7\ufe0f en construction \ud83c\udfd7"}),"\n",(0,t.jsx)(n.h3,{id:"listes",children:"listes"}),"\n",(0,t.jsx)(n.p,{children:"On peut vouloir repr\xe9senter une s\xe9quence de plusieurs valeurs d'un m\xeame type"}),"\n",(0,t.jsx)(n.h3,{id:"tuples",children:"tuples"}),"\n",(0,t.jsx)(n.p,{children:"On peut regrouper plusieurs valeurs de types diff\xe9rents dans un tuple, la syntaxe est des parenth\xe8ses et des\nvirgules pour s\xe9parer les valeurs"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'(4.5 , "salut")\n'})}),"\n",(0,t.jsx)(n.p,{children:"On acc\xe8de \xe0 chaque valeur par un index"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'(4.5 , "salut")[0] # vaut 4.5\n(4.5 , "salut")[1] # vaut salut\n'})}),"\n",(0,t.jsx)(n.p,{children:"Cela permet de garder plusieurs valeurs dans une seule variable"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"coordonnees = (4.5 , 10.5) # coordonn\xe9es d'un point dans un plan cart\xe9sien par exemple\nprint(type(coordonnees))\nautreCoordonnees = (5.6 , 3.5)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dictionnaires",children:"dictionnaires"}),"\n",(0,t.jsx)(n.p,{children:"On peut vouloir associer des valeurs \xe0 des cl\xe9s, on utilise un dictionnaire"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'dico = {"cle1" : 4.5 , "cle2" : "salut"}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"ensembles",children:"ensembles"}),"\n",(0,t.jsx)(n.p,{children:"On peut vouloir repr\xe9senter un ensemble de valeurs sans doublons, on utilise un ensemble"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"monEnsemble = {1, 2, 3, 4}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["On peut ajouter des \xe9l\xe9ments avec ",(0,t.jsx)(n.code,{children:"add"})," et supprimer avec ",(0,t.jsx)(n.code,{children:"remove"})," ou ",(0,t.jsx)(n.code,{children:"discard"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"monEnsemble.add(5)\nmonEnsemble.remove(2)\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);