"use strict";(self.webpackChunk_420_SN1=self.webpackChunk_420_SN1||[]).push([[433],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>d});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=n.createContext({}),s=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(u.Provider,{value:r},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=s(t),m=o,d=l["".concat(u,".").concat(m)]||l[m]||f[m]||a;return t?n.createElement(d,c(c({ref:r},p),{},{components:t})):n.createElement(d,c({ref:r},p))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=m;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i[l]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=t[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6349:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=t(7462),o=(t(7294),t(3905));const a={},c="14 Formatif, r\xe9vision et aper\xe7u de r\xe9seaux de neurones",i={unversionedId:"cours/rencontre14",id:"cours/rencontre14",title:"14 Formatif, r\xe9vision et aper\xe7u de r\xe9seaux de neurones",description:"",source:"@site/docs/01-cours/14-rencontre14.md",sourceDirName:"01-cours",slug:"/cours/rencontre14",permalink:"/420-SN1/cours/rencontre14",draft:!1,editUrl:"https://github.com/departement-info-cem/420-SN1/tree/main/docs/01-cours/14-rencontre14.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{},sidebar:"docs",previous:{title:"13 Int\xe9gration // librairies // tests automatiques, service et autre en Python",permalink:"/420-SN1/cours/rencontre13"},next:{title:"15 : Examen final",permalink:"/420-SN1/cours/rencontre15"}},u={},s=[],p={toc:s},l="wrapper";function f(e){let{components:r,...t}=e;return(0,o.kt)(l,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"14-formatif-r\xe9vision-et-aper\xe7u-de-r\xe9seaux-de-neurones"},"14 Formatif, r\xe9vision et aper\xe7u de r\xe9seaux de neurones"))}f.isMDXComponent=!0}}]);