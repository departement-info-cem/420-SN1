"use strict";(self.webpackChunk_420_SN1=self.webpackChunk_420_SN1||[]).push([[80],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),o=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=o(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=o(n),d=a,v=c["".concat(i,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(v,u(u({ref:t},p),{},{components:n})):r.createElement(v,u({ref:t},p))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,u=new Array(l);u[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:a,u[1]=s;for(var o=2;o<l;o++)u[o]=n[o];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4869:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));const l={},u="expressions, variables et types",s={unversionedId:"cours/rencontre2",id:"cours/rencontre2",title:"expressions, variables et types",description:"expression, valeur type",source:"@site/docs/01-cours/02-rencontre2.md",sourceDirName:"01-cours",slug:"/cours/rencontre2",permalink:"/420-SN1/cours/rencontre2",draft:!1,editUrl:"https://github.com/departement-info-cem/420-SN1/tree/main/docs/01-cours/02-rencontre2.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"docs",previous:{title:"1 : Accueil, intro, plan de cours et premiers scripts",permalink:"/420-SN1/cours/rencontre1"},next:{title:"Retour en classe sur le cours pr\xe9c\xe9dent",permalink:"/420-SN1/cours/rencontre3"}},i={},o=[{value:"expression, valeur type",id:"expression-valeur-type",level:2},{value:"Op\xe9rateur et fonctions",id:"op\xe9rateur-et-fonctions",level:2},{value:"Ex\xe9cution : \xe9valuateur d&#39;expression",id:"ex\xe9cution--\xe9valuateur-dexpression",level:3},{value:"type d&#39;une expression",id:"type-dune-expression",level:2},{value:"variable",id:"variable",level:2},{value:"types de base",id:"types-de-base",level:2},{value:"Entier",id:"entier",level:3},{value:"Nombre \xe0 virgule (flottant)",id:"nombre-\xe0-virgule-flottant",level:3},{value:"Nombre \xe0 virgule (d\xe9cimaux)",id:"nombre-\xe0-virgule-d\xe9cimaux",level:3},{value:"Texte",id:"texte",level:3},{value:"types compos\xe9s",id:"types-compos\xe9s",level:2},{value:"tableaux",id:"tableaux",level:3},{value:"tuples",id:"tuples",level:3},{value:"dictionnaires",id:"dictionnaires",level:3},{value:"Exercice tableau",id:"exercice-tableau",level:2}],p={toc:o},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"expressions-variables-et-types"},"expressions, variables et types"),(0,a.kt)("h2",{id:"expression-valeur-type"},"expression, valeur type"),(0,a.kt)("p",null,"Une expression est un bout de code qui a une valeur et un type."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"5")," est une expression qui vaut 5 et de type entier"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},'"5"')," est une expression de type texte")),(0,a.kt)("h2",{id:"op\xe9rateur-et-fonctions"},"Op\xe9rateur et fonctions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"5 + 3")," est une expression de type entier qui vaut 8"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},'"coucou " + str(81)'),' est une expression de type texte qui vaut "coucou 8"')),(0,a.kt)("p",null,"On voit que ",(0,a.kt)("em",{parentName:"p"},"+")," ne fait pas la m\xeame chose selon le type de son op\xe9rateur. Pour des nombres\nil fait la somme habituelle. Pour du texte, il met les 2 textes bout \xe0 bout."),(0,a.kt)("p",null,"Les fonctions comme ",(0,a.kt)("strong",{parentName:"p"},"str()")," peuvent avoir un type. Ici ",(0,a.kt)("strong",{parentName:"p"},"str")," transforme une\nexpression qu'on lui passe en texte:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"81")," est un entier qui vaut 81"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"str(81)")," est un texte constitu\xe9 du caract\xe8re ",(0,a.kt)("em",{parentName:"li"},"8")," suivi du caract\xe8re ",(0,a.kt)("em",{parentName:"li"},"1"))),(0,a.kt)("h3",{id:"ex\xe9cution--\xe9valuateur-dexpression"},"Ex\xe9cution : \xe9valuateur d'expression"),(0,a.kt)("p",null,"On peut vite se laisser emporter et construire des expressions assez complexes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"str( 5 + 8 * (7 + 98 * 6) / 5 / 6.7 * 10 - 4)\n")),(0,a.kt)("p",null,"Pour \xe9valuer cette expression petit bout par petit bout, on peut utiliser un \xe9valuateur d'expression.\nIl faut placer un point d'arr\xeat sur la ligne dans le script."),(0,a.kt)("h2",{id:"type-dune-expression"},"type d'une expression"),(0,a.kt)("p",null,"Python contient une fonction permettant de conna\xeetre le type d'une expression:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"truc = ...\nprint( type(truc) )\n")),(0,a.kt)("h2",{id:"variable"},"variable"),(0,a.kt)("p",null,"Un nom qui va d\xe9signer plusieurs valeurs au fil du temps."),(0,a.kt)("p",null,'Dans un premier temps on va avoir des "variables" qui "varient" \xe0 chaque assignation.'),(0,a.kt)("p",null,"Il est donc important de voir ce qu'est une assignation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"nomDeMaVariable = expression\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ceci n'est pas une \xe9galit\xe9 comme en maths"),(0,a.kt)("li",{parentName:"ul"},"on calcule expression, ce qui nous donne une valeur et un type"),(0,a.kt)("li",{parentName:"ul"},'on associe, on "assigne" cette valeur et type au ',(0,a.kt)("em",{parentName:"li"},"nomDeMaVariable"))),(0,a.kt)("p",null,"Ex\xe9cute en mode d\xe9bogage et on regarde la valeur de x changer."),(0,a.kt)("p",null,"TODO ajouter un exemple avec du hasard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"x = 5 * 6\ny = 2 * x\nx = x * x + 25.6\nx = str(5 - x)\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"si on \xe9tait en maths, y devrait toujours valoir le double de x",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"si x \xe9volue dans le temps"),(0,a.kt)("li",{parentName:"ul"},"comme on a pos\xe9 y qui est 2*x"),(0,a.kt)("li",{parentName:"ul"},"on devrait avoir y qui \xe9volue avec le temps"))),(0,a.kt)("li",{parentName:"ul"},"en programmation le ",(0,a.kt)("strong",{parentName:"li"},"=")," n'est pas une \xe9quation, c'est une ",(0,a.kt)("strong",{parentName:"li"},"assignation"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"on \xe9value l'expression en partie droite ",(0,a.kt)("em",{parentName:"li"},"2 ")," x*"),(0,a.kt)("li",{parentName:"ul"},"comme x vaut 30 \xe0 ce moment l\xe0, \xe7a donne 60"),(0,a.kt)("li",{parentName:"ul"},"on assigne cette valeur dans la variable y"),(0,a.kt)("li",{parentName:"ul"},"si on veut assigner une nouvelle valeur, il faut un autre ",(0,a.kt)("em",{parentName:"li"},"y = ..."))))),(0,a.kt)("h2",{id:"types-de-base"},"types de base"),(0,a.kt)("p",null,"La plupart des langages de programmation on des types de base pour repr\xe9senter les nombres"),(0,a.kt)("h3",{id:"entier"},"Entier"),(0,a.kt)("p",null,"On commence par 1 2 3 -99 etc."),(0,a.kt)("h3",{id:"nombre-\xe0-virgule-flottant"},"Nombre \xe0 virgule (flottant)"),(0,a.kt)("h3",{id:"nombre-\xe0-virgule-d\xe9cimaux"},"Nombre \xe0 virgule (d\xe9cimaux)"),(0,a.kt)("h3",{id:"texte"},"Texte"),(0,a.kt)("h2",{id:"types-compos\xe9s"},"types compos\xe9s"),(0,a.kt)("h3",{id:"tableaux"},"tableaux"),(0,a.kt)("p",null,"On peut vouloir repr\xe9senter une s\xe9quence de plusieurs valeurs d'un m\xeame type"),(0,a.kt)("h3",{id:"tuples"},"tuples"),(0,a.kt)("p",null,"On peut regrouper plusieurs valeurs de types diff\xe9rents dans un tuple, la syntaxe est des parenth\xe8ses et des virgules pour s\xe9parer les valeurs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'(4.5 , "salut")\n')),(0,a.kt)("p",null,"On acc\xe8de \xe0 chaque valeur par un index"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'(4.5 , "salut")[0]  # vaut 4.5\n(4.5 , "salut")[1]  # vaut salut\n')),(0,a.kt)("p",null,"Cela permet de garder plusieurs valeurs dans une seule variable"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"coordonnees = (4.5 , 10.5)              # coordonn\xe9es d'un point dans un plan cart\xe9sien par exemple\nprint(type(coordonnees))\nautreCoordonnees = (5.6 , 3.5)\n")),(0,a.kt)("h3",{id:"dictionnaires"},"dictionnaires"),(0,a.kt)("h1",{id:"exercices"},"Exercices"),(0,a.kt)("h2",{id:"exercice-tableau"},"Exercice tableau"),(0,a.kt)("p",null,"TODO faire un exercice qui calcule"))}m.isMDXComponent=!0}}]);